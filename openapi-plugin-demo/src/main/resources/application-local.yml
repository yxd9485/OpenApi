server:
  port: 8200
  servlet:
    context-path: /
log:
  path: ~/logs/openapi-plugin
  keep:
    day: 10

spring:
  profiles:
    active: local
  cache:
    type: redis
  redis:
    database: 6
    host: 172.16.0.7
    port: 6379
    password:
    jedis:
      pool:
        max-active: 8
        max-wait: -1ms
        max-idle: 100
        min-idle: 0
    lettuce:
      pool:
        max-active: 5000
  # 数据源配置
  #spring.datasource.druid.max-active 最大连接数
  #spring.datasource.druid.initial-size 初始化大小
  #spring.datasource.druid.min-idle 最小连接数
  #spring.datasource.druid.max-wait 获取连接等待超时时间
  #spring.datasource.druid.time-between-eviction-runs-millis 间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
  #spring.datasource.druid.min-evictable-idle-time-millis 一个连接在池中最小生存的时间，单位是毫秒
  #spring.datasource.druid.filters=config,stat,wall,log4j 配置监控统计拦截的filters，去掉后监控界面SQL无法进行统计，’wall’用于防火墙
  datasource:
    name: druidDataSource
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/longc_master?useSSL=false
      username: root
      password: P@ssw0rd
      #=========Druid提供的集中filter
      #default	com.alibaba.druid.filter.stat.StatFilter
      #stat	com.alibaba.druid.filter.stat.StatFilter
      #mergeStat	com.alibaba.druid.filter.stat.MergeStatFilter
      #encoding	com.alibaba.druid.filter.encoding.EncodingConvertFilter
      #log4j	com.alibaba.druid.filter.logging.Log4jFilter
      #log4j2	com.alibaba.druid.filter.logging.Log4j2Filter
      #slf4j	com.alibaba.druid.filter.logging.Slf4jLogFilter
      #commonlogging	com.alibaba.druid.filter.logging.CommonsLogFilter
      #wall	com.alibaba.druid.wall.WallFilter
      #filters: stat,wall,log4j,config
      max-active: 100
      initial-size: 1
      max-wait: 10000
      min-idle: 1
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: select 'x'
      demoTest-while-idle: true
      demoTest-on-borrow: false
      demoTest-on-return: false
      pool-prepared-statements: true
      max-open-prepared-statements: 50
      max-pool-prepared-statement-per-connection-size: 20

openapi:
  url: http://127.0.0.1:10010/

wechat:
  callback-tag: dev